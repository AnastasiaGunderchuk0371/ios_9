// Структура IOSCollection с использованием copy on write
struct IOSCollection<Element>: CustomStringConvertible {

    private var elements: [Element]

    // Публичный инициализатор
    init(elements: [Element]) {
        self.elements = elements
    }

    // Метод добавления элемента
    mutating func append(_ newElement: Element) {
        elements.append(newElement)
    }

    // Метод для доступа к элементам по индексу
    subscript(index: Int) -> Element {
        get {
            return elements[index]
        }
        set {
            elements[index] = newValue
        }
    }

    // Отображение содержимого для примера
    var description: String {
        return "IOSCollection with elements: (elements)"
    }
}

// Пример использования
var iosCollection = IOSCollection(elements: [1, 2, 3])
print(iosCollection)  // Output: IOSCollection with elements: [1, 2, 3]

// Добавление элемента
iosCollection.append(4)
print(iosCollection)  // Output: IOSCollection with elements: [1, 2, 3, 4]
